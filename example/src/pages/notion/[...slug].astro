---
import '../../styles/global.css'
import type { CollectionEntry } from 'astro:content'
import { getCollection } from 'astro:content'
import { render } from 'astro:content'
import { Code } from 'astro:components'

export async function getStaticPaths() {
  const notionFromDatabase = await getCollection('notionFromDatabase')
  const notionFromPage = await getCollection('notionFromPage')
  return [...notionFromDatabase, ...notionFromPage].map((post) => ({
    params: { slug: post.id },
    props: { post, tags: post.data.properties.Tags },
  }))
}

type Props = {
  post: CollectionEntry<'notionFromDatabase'> | CollectionEntry<'notionFromPage'>
  tags: CollectionEntry<'notionFromDatabase'>['data']['properties']['Tags'] | undefined
}

const { post, tags } = Astro.props
const { Content } = await render(post)
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <style>
      main {
        width: calc(100% - 2em);
        max-width: 100%;
        margin: 0;
      }
      .hero-image {
        width: 100%;
      }
      .hero-image img {
        display: block;
        margin: 0 auto;
        border-radius: 12px;
        box-shadow: var(--box-shadow);
      }
      .tag {
        padding: 2px;
        border-radius: 2px;
        border: 2px solid skyblue;
      }
      .tag + .tag {
        margin-left: 0.5em;
      }
    </style>
  </head>

  <body>
    <main>
      <article>
        <div class="hero-image"></div>
        <div class="prose">
          <div class="title">
            {post.data.title}
            <div class="date">
              {
                (
                  <time datetime={new Date(post.data.created_time).toLocaleString()}>
                    {new Date(post.data.created_time).toLocaleString()}
                  </time>
                )
              }
            </div>
            <hr />
            {tags && Object.values(tags.multi_select).map((tag) => <span class="tag">{tag.name}</span>)}
          </div>
          <Content />
          <hr />
          {post.filePath}
          <hr />
          {post.rendered?.html}
          <hr />
          <hr />
          <div>tags</div>
          <Code code={JSON.stringify(tags ?? '', null, 2)} lang="json" />
          <hr />
          <div>properties</div>
          <Code code={JSON.stringify(post.data.properties ?? '', null, 2)} lang={'json'} />
          <hr />
          <div>blocks</div>
          <Code code={JSON.stringify(post.data.blocks ?? '', null, 2)} lang={'json'} />
        </div>
      </article>
    </main>
  </body>
</html>
